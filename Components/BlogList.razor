<ul class="list bg-base-100 rounded-box shadow-md overflow-hidden py-2">
    <li class="py-2 px-4 text-base flex flex-row items-center justify-between">
        <span>
            推荐文章
        </span>
        <div class="join">
            <button class="join-item btn" onclick="@previousPage" disabled="@(BlogMetaInfoList == null || start <= 1)">
                <Icon Name="tabler:chevrons-left" Width="20" Height="20" />
            </button>
            <button class="join-item btn" disabled="@(BlogMetaInfoList == null || BlogMetaInfoList.Count() == 0)">
                @start - @end
            </button>
            <button class="join-item btn" onclick="@nextPage" disabled="@(BlogMetaInfoList == null || end >= BlogMetaInfoList.Count())">
                <Icon Name="tabler:chevrons-right" Width="20" Height="20" />
            </button>
        </div>
    </li>
    @if (!fetched)
    {
        <Loading Message="正在加载推荐文章..." />
    }
    else if (BlogMetaInfoList == null)
    {
        <Alert Type="error" Message="暂时无法从服务器获取推荐文章！" />
    }
    else if (BlogMetaInfoList.Count() == 0)
    {
        <Alert Type="info" Message="暂无推荐文章！" />
    }
    else
    {
        @for (int i = start; i <= end; ++i)
        {
            <BlogListItem BlogMetaInfo="@BlogMetaInfoList.ElementAt(i - 1)" />
            @if (i != end)
            {
                <div class="divider m-0"></div>
            }
        }
    }
</ul>

@code {
    bool fetched;
    IEnumerable<BlogMetaInfoDto>? BlogMetaInfoList;
    int start, end;

    protected override async Task OnInitializedAsync()
    {
        // todo: Fetch recommended posts from the server
        await Task.Delay(3000);
        fetched = true;
        start = BlogMetaInfoList?.Count() > 0 ? 1 : 0;
        end = Math.Min(5, BlogMetaInfoList?.Count() ?? 0);
        StateHasChanged();
    }

    void previousPage()
    {
        if (BlogMetaInfoList != null && start > 1)
        {
            start -= 5;
            end = start + 4;
        }
    }

    void nextPage()
    {
        if (BlogMetaInfoList != null && end < BlogMetaInfoList.Count())
        {
            start += 5;
            end += 5;
            end = Math.Min(end, BlogMetaInfoList.Count());
        }
    }
}